name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        if (Get-LocalUser -Name "runneradmin" -ErrorAction SilentlyContinue) {
            Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        } else {
            New-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force) -UserMayNotChangePassword -PasswordNeverExpires -AccountNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member "runneradmin"
        }

    - name: Download Avica
      run: |
        Invoke-WebRequest -Uri "https://download.avica.link/downloader/Avica_setup.exe" -OutFile "C:\Users\runneradmin\Downloads\Avica_setup.exe"
        Write-Output "Avica downloaded to C:\Users\runneradmin\Downloads."
        
    - name: Download NetLimiter
      run: |
        Invoke-WebRequest -Uri "https://download.netlimiter.com/nl/netlimiter-5.3.13.0.exe" -OutFile "C:\Users\runneradmin\Downloads\netlimiter-5.3.13.0.exe"
        Write-Output "NetLimiter downloaded to C:\Users\runneradmin\Downloads."
    - name: Download IDM
      run: |
        Invoke-WebRequest -Uri "https://mirror2.internetdownloadmanager.com/idman642build10.exe?v=lt&filename=idman642build10.exe" -OutFile "C:\Users\runneradmin\Downloads\idman642build10.exe"
        Write-Output "IDM downloaded to C:\Users\runneradmin\Downloads."
        
    - name: Open File Explorer in Downloads
      run: Start-Process -FilePath explorer.exe -ArgumentList "C:\Users\runneradmin\Downloads"

    - name: Create ngrok tunnel to remote desktop
      run: |
        Start-Process .\ngrok.exe -ArgumentList "tcp 3389" -NoNewWindow
        Start-Sleep -Seconds 10
        $ngrokUrl = ""
        while ($true) {
          try {
            $tunnels = Invoke-RestMethod -Uri http://127.0.0.1:4040/api/tunnels
            if ($tunnels.tunnels) {
              $ngrokUrl = $tunnels.tunnels[0].public_url
              Write-Output "ngrok tunnel is available at: $ngrokUrl"
              break
            }
          } catch {
            Write-Output "Waiting for ngrok to initialize..."
            Start-Sleep -Seconds 5
          }
        }
        while ($true) {
          Start-Sleep -Seconds 300
        }
