name: CI

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Update and install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y xrdp xfce4 xfce4-goodies curl
        sudo systemctl enable xrdp
        sudo systemctl start xrdp

    - name: Download ngrok
      run: wget -O ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip

    - name: Extract ngrok
      run: unzip ngrok.zip

    - name: Authenticate with ngrok
      run: ./ngrok authtoken $NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Create and configure xrdp session
      run: |
        echo xfce4-session > ~/.xsession
        sudo systemctl restart xrdp

    - name: Ensure the user ubuntu exists
      run: |
        if id "ubuntu" &>/dev/null; then
            echo "User exists"
        else
            sudo useradd -m -s /bin/bash ubuntu
        fi

    - name: Set up user password
      run: |
        echo "ubuntu:$RUNNERADMIN_PASSWORD" | sudo chpasswd
      env:
        RUNNERADMIN_PASSWORD: ${{ secrets.RUNNERADMIN_PASSWORD }}

    - name: Create start-ngrok.sh script
      run: |
        cat << 'EOF' > start-ngrok.sh
        #!/bin/bash
        ./ngrok tcp 3389 &
        NGROK_PID=$!
        sleep 10
        NGROK_URL=""
        while true; do
          TUNNELS=$(curl -s http://127.0.0.1:4040/api/tunnels)
          if [[ $TUNNELS == *"public_url"* ]]; then
            NGROK_URL=$(echo $TUNNELS | grep -o 'tcp://[^"]*')
            echo "ngrok tunnel is available at: $NGROK_URL"
            break
          else
            echo "Waiting for ngrok to initialize..."
            sleep 5
          fi
        done
        if [ -z "$NGROK_URL" ]; then
          kill $NGROK_PID
          echo "Failed to create ngrok tunnel"
          exit 1
        fi
        while true; do
          sleep 300
        done
        EOF
        chmod +x start-ngrok.sh

    - name: Run start-ngrok.sh script
      run: ./start-ngrok.sh
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
